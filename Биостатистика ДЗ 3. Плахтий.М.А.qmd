---
title: "ДЗ 3"
format: html
editor: visual
---

В первых двух заданиях нам необходимо посчитать описательные статистики. Для количественной переменной рассчитатье число наблюдений, среднее, стандартное отклонение, 1-й и 3-й квартили, минимум и максимум. Для категориальной переменной определить абсолютную и относительные частоты.

Для начала загрузим и прочитаем файл:

```{r}
library(readxl)

Pima <- read_excel("G:/Rstudio.Files/pima.xlsx") 
Pima
```

Всё отлично.

Далее необходимо выполнить следующие пункты:

1.  **Рассчитать описательные статистики для переменных `glucose`, `pressure`, `mass`. — 1 балл**

2.  **Рассчитать описательную статистику для переменной `diabetes`. Создать на основе переменной `age` новую переменную `age_group`, которая будет отражать следующие возрастные группы: 21–35, 36–49 и 50+. Посчитать описательную статистику для новой переменной. — 1 балл**

3.  **Определить 90% доверительный интервал для переменной `pedigree`. — 2 балла**

4.  **Построить график плотности вероятности для переменной `glucose` и отметить на нем среднее значение. Для той же переменной постройте гистограмму. Построить два ящика с усами для значений `pos` и `neg` соответственно переменной `diabetes`. — 3 балла**

5.  **Построить на одном графике две диаграммы рассеяния для наличия или отсутствия диабета. По оси X представить значения обхвата трицепса, а по оси Y — массу тела. Выполнить окрашивание, заливку и группирование по переменной `diabetes`. — 3 балла**

Для выполнения этих заданий в RStudio нам потребуется использовать различные функции и пакеты. Вот пример кода, который поможет выполнить каждый из пунктов:

1.  Рассчитать описательные статистики для переменных glucose, pressure, mass:

```{r}

library(dplyr)

summary(Pima[c("glucose", "pressure", "mass")])

```

2.  Рассчитать описательную статистику для переменной diabetes. Создать на основе переменной age новую переменную age_group:

```{r}
# Создание переменной age_group
data <- Pima %>%
  mutate(age_group = case_when(
    age >= 21 & age <= 35 ~ "21-35",
    age >= 36 & age <= 49 ~ "36-49",
    age >= 50 ~ "50+"
  ))

# Рассчет описательной статистики для новой переменной age_group
summary(data$age_group)

```

3.  Определить 90% доверительный интервал для переменной pedigree:

```{r}
conf_interval <- t.test(Pima$pedigree, conf.level = 0.90)$conf.int
conf_interval

```

4.  Построить график плотности вероятности для переменной glucose и отметить на нем среднее значение:

```{r}
install.packages("ggplot2")
library(ggplot2)

ggplot(Pima, aes(x = glucose)) +
  geom_density() +
  geom_vline(aes(xintercept = mean(glucose)), color = "red")

```

Для той же переменной постройте гистограмму:

```{r}
ggplot(Pima, aes(x = glucose)) +
  geom_histogram(binwidth = 10, fill = "skyblue", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = mean(glucose)), color = "red")

```

Построить два ящика с усами для значений pos и neg соответственно переменной diabetes:

```{r}
ggplot(Pima, aes(x = diabetes, y = glucose, fill = diabetes)) +
  geom_boxplot() +
  scale_fill_manual(values = c("pos" = "skyblue", "neg" = "salmon"))

```

5.  Построить на одном графике две диаграммы рассеяния для наличия или отсутствия диабета:

```{r}

# Создаем график рассеяния для наличия или отсутствия диабета
# по обхвату трицепса и массе тела
scatter_plot <- ggplot(Pima, aes(x = triceps, y = mass)) +
                geom_point(aes(color = diabetes)) +
                labs(title = "Scatter plot of triceps vs. mass by diabetes status",
                     x = "Triceps", y = "Mass") +
                theme_minimal()

# Используем facet_grid для разделения графика на две панели 
# в зависимости от значения переменной diabetes
facet_plot <- scatter_plot + facet_grid(. ~ diabetes)

# Выводим график
print(facet_plot)


```
